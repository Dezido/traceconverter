[directories]
raw_traces_dir=C:/Users/Dennis/PycharmProjects/traceconverter/raw_traces
converted_traces_dir=C:/Users/Dennis/PycharmProjects/traceconverter/converted_traces
profido_traces_dir=C:/Users/Dennis/PycharmProjects/traceconverter/profido_traces/

[fonts]
default_font=TkDefaultFont
default_font_bold=TkDefaultFont 10 bold

[entries]
entry_width=80

[listbox]
listbox_width=75
listbox_height=25

[default_entries]
default_columns_entry=1
default_source_entry=Tracerepository
default_description_entry=Description
default_tracedatadescription_entry=Tracedatadescription
default_username_entry=Dennis Ziebart
default_customfield_entry=The trace ...
default_filename_entry=example_result

[tooltips]
bg=#bfbfbf

# preparation tab
file=Select the file you want to prepare
file_button=Open File Explorer to select a file for preparation
remove_rows=Number of rows that will be removed
remove_rows_button=Removes the rows from the selected file
add_header=Header to add to the file
add_header_button=Add new header to selected file
delimiter=Which delimiter is used to separate the entries. Pandas delimiters (including regular expressions) are valid entries.
  For example '\s+' for various spaces
transform_button=Transform the selected file to CSV format. Result is saved to raw traces directory (as specified in the config file)
header_checkbutton=If selected the first line will be the header of the result file

# convert tab
original_tracefile=Choose the trace you want to convert
columns=Which columns of the original trace contain the relevant tracedata. Separate multiple columns with a semicolon
source=From which source (repository/archive) does the trace originate
tracedescription=Description of the whole trace
tracedatadescription=What is represented in the tracedata. Descriptions for multiple data entries can be seperated by using a semicolon
username=Current user of the tool
custom_field=Additional information about the trace (optional field)
result_filename=Filename for the resulting trace
profido_checkbutton= If checked tracedata will be extracted after conversion, so it can be used with ProFiDo
profido_filename_ct=Name of the ProFiDo input file
browse_file_button=Open File Explorer to select a trace for conversion
convert_button=Convert the selected trace to standard format
numerical_format=Formatstring for numbers representing the statistical characteristics. Python format strings are valid entries.
  For example ':e' for scientific notation. Can also be left empty for standard float format. Curly brackets not needed.

# filter tab
selected_traces=Set of traces to filter
browse_files_button=Open File Explorer to select traces to filter
filter_button=Filters the traces according to the specified condition
expression_label=Specify a boolean expression containing statistical parameters to filter the traces.
  Use mean, median, skew, kurtosis or autocorrelation to reference the parameter. Python syntax is required.
  For example: (mean > 20 and median != 50) and skew != 10 

# profido tab
converted_trace=The trace (has to converted) the columns shall be extracted from
browse_trace_button=Open File Explorer to select converted trace the columns shall be extracted from
extract_button=Extracts the tracedata so it can be used in ProFiDo
profido_filename=Name of the ProFiDo input file

#validation tab
browse_file_button_vt=Open File Explorer to select trace for validation
validate_statistics_button=Check if statistics are valid
validate_hash_button=Check if hash is valid
restore_traceheader_button=Restores/generates statistics and hash entry

[browse_file]
no_file_selected_window=No file selected
no_file_selected_message=Please select a valid file
no_files_selected_window=No files selected
no_files_selected_message=Please select at least one valid file
